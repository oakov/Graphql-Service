# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Query {
  artist(id: ID!): Artist
  artists(offset: Int, limit: Int): [Artist]
  band(id: ID!): Band
  bands(offset: Int, limit: Int): [Band]
  genre(id: ID!): Genre
  genres(offset: Int, limit: Int): [Genre]
  user(id: ID!): User
  jwt(password: String!, email: String!): JWT
}

type Artist {
  id: ID!
  firstName: String
  secondName: String
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
  bands: [Band]
  instruments: [String]
}

type Band {
  id: ID!
  name: String
  origin: String
  website: String
  genres: [Genre]
}

type Genre {
  id: ID!
  name: String
  description: String
  country: String
  year: Int
}

type User {
  id: ID!
  firstName: String
  lastName: String
  password: String
  email: String!
}

type JWT {
  jwt: String!
}

type Mutation {
  createArtist(artist: ArtistInput!): Artist!
  createBand(band: BandInput!): Band!
  createGenre(genre: GenreInput!): Genre
  updateGenre(genre: GenreInput!, id: ID!): Genre
  deleteGenre(id: ID!): Genre
  register(user: UserInput!): User
}

input ArtistInput {
  firstName: String
  secondName: String
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
  bandsIds: [ID]
  instruments: [String]
}

input BandInput {
  name: String
  origin: String
  website: String
  genresIds: [ID]
}

input GenreInput {
  name: String
  description: String
  country: String
  year: Float
}

input UserInput {
  firstName: String
  lastName: String
  password: String
  email: String!
}
